/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample C++ project to get you started.
 * For more details take a look at the Building C++ applications and libraries chapter in the Nokee
 * User Manual available at https://nokee.dev/docs/0.4.0/userguide/building-native-projects.html
 */

plugins {
    // Apply the cpp-application plugin to add support for building C++ executables
    id 'dev.nokee.cpp-application'

    // Apply the native-unit-testing plugin to add support for building and running test executables
    id 'dev.nokee.native-unit-testing'
}

import dev.nokee.testing.nativebase.NativeTestSuite
import dev.nokee.platform.nativebase.ExecutableBinary

application {
    targetMachines = [${targetMachineDefinition.groovyString}]
}

testSuites {
    test(NativeTestSuite) {
        // This test suite target the application component
        testedComponent application

        dependencies {
            // Add dependencies to Google Test artifacts built from source
            implementation 'com.github.google.googletest:gtest:latest.integration'
            implementation 'com.github.google.googletest:gtest_main:latest.integration'
        }

        // Configuration for optimal Google Test experience
        binaries.configureEach(ExecutableBinary) {
            compileTasks.configureEach {
                compilerArgs.addAll(toolChain.map {
                    if (it in Gcc || it in Clang) {
                        return ['-std=c++17']
                    }
                    return []
                })
            }
            linkTask.configure {
                linkerArgs.addAll(targetPlatform.map {
                    if (it.operatingSystem.linux) {
                        return ['-lpthread']
                    } else if (it.operatingSystem.windows) {
                        return ['/SUBSYSTEM:CONSOLE']
                    }
                    return []
                })
            }
        }
    }
}
