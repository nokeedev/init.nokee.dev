plugins {
    id 'dev.gradleplugins.java-gradle-plugin' version '1.1.29'
    id 'dev.nokee.documentation.bintray-publish' version '0.1.14'
    id 'dev.gradleplugins.gradle-plugin-unit-test' version '1.1.29'
    id 'dev.gradleplugins.gradle-plugin-functional-test' version '1.1.29'
}

group = 'dev.nokee.init'
version = '0.5.0'

tasks.named('processResources', ProcessResources) { task ->
    task.from(file('nokee.init.gradle')) {
        into('dev/nokee/init/internal/wrapper')
    }
}

repositories {
    jcenter()
    gradlePluginDevelopment()
}

gradlePlugin {
    compatibility {
        minimumGradleVersion = '6.2.1'
    }
    java {
        withJavadocJar()
        withSourcesJar()
    }
}

test {
    dependencies {
        implementation spockFramework()
        implementation groovy()
        implementation 'net.bytebuddy:byte-buddy:1.10.14'
        implementation 'cglib:cglib-nodep:3.3.0'
        implementation 'org.objenesis:objenesis:3.1'
    }
}

functionalTest {
    testingStrategies = [strategies.coverageForMinimumVersion, strategies.coverageForLatestGlobalAvailableVersion, strategies.coverageForLatestNightlyVersion]
    dependencies {
        implementation spockFramework()
        implementation groovy()
        implementation gradleFixtures()
    }
    testTasks.configureEach { Test task ->
        task.dependsOn('publishAllPublicationsToStagingRepository')
        task.systemProperty('dev.nokee.init.staging-repository-path', layout.buildDirectory.dir('repositories/staging').get().asFile.absolutePath)

        if (task.name == 'functionalTestMinimumGradle') {
            task.enabled = (JavaVersion.current().majorVersion != '14')
        }
    }
}

publishing {
    repositories {
        maven {
            name = 'Bintray'
            url = 'https://dl.bintray.com/nokeedev/distributions-initialization'
            ext.packageName = 'dev.nokee.init'
            credentials {
                username = System.getProperty('dev.nokee.env.BINTRAY_USER')
                password = System.getProperty('dev.nokee.env.BINTRAY_KEY')
            }
        }
        maven {
            name = 'Staging'
            url = layout.buildDirectory.dir('repositories/staging')
        }
    }
}

tasks.register('release') {
    dependsOn('publishAllPublicationsToBintrayRepository')
}